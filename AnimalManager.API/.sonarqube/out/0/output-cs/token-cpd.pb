Á	
sD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Domain\Interfaces\IRepository.cs
	namespace 	
AnimalManager
 
. 
Domain 
. 

Interfaces )
{ 
public 

	interface 
IRepository  
<  !
T! "
>" #
where$ )
T* +
:, -

BaseEntity. 8
{ 
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
Task 
< 
T 
? 
> 
GetByIdAsync 
( 
Guid "
id# %
)% &
;& '
Task		 
AddAsync		 
(		 
T		 
entity		 
)		 
;		  
Task

 
UpdateAsync

 
(

 
T

 
entity

 !
)

! "
;

" #
Task 
DeleteAsync 
( 
Guid 
id  
)  !
;! "
} 
} º

pD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Domain\Entities\BaseEntity.cs
	namespace 	
AnimalManager
 
. 
Domain 
. 
Entities '
{ 
public 

abstract 
class 

BaseEntity $
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
=- .
Guid/ 3
.3 4
NewGuid4 ;
(; <
)< =
;= >
public 
DateTime 
CratedAt  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
=7 8
DateTime9 A
.A B
NowB E
;E F
public 
DateTime 
	UpdatedAt !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
public		 
void		 
UpdateTimestamp		 #
(		# $
)		$ %
{

 	
	UpdatedAt 
= 
DateTime  
.  !
UtcNow! '
;' (
} 	
} 
} Ö
lD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Domain\Entities\Animal.cs
	namespace 	
AnimalManager
 
. 
Domain 
. 
Entities '
{ 
public 

class 
Animal 
: 

BaseEntity $
{ 
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
string 
Species 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public		 
int		 
Age		 
{		 
get		 
;		 
private		 %
set		& )
;		) *
}		+ ,
public 
Animal 
( 
string 
name !
,! "
string# )
species* 1
,1 2
int3 6
age7 :
): ;
{ 	
Validate 
( 
name 
, 
species "
," #
age$ '
)' (
;( )
Name 
= 
name 
; 
Species 
= 
species 
; 
Age 
= 
age 
; 
} 	
public 
void 
Update 
( 
string !
name" &
,& '
string( .
species/ 6
,6 7
int8 ;
age< ?
)? @
{ 	
Validate 
( 
name 
, 
species "
," #
age$ '
)' (
;( )
Name 
= 
name 
; 
Species 
= 
species 
; 
Age 
= 
age 
; 
UpdateTimestamp 
( 
) 
; 
} 	
private 
static 
void 
Validate $
($ %
string% +
name, 0
,0 1
string2 8
species9 @
,@ A
intB E
ageF I
)I J
{ 	
if 
( 
string 
. 
IsNullOrWhiteSpace )
() *
name* .
). /
)/ 0
throw1 6
new7 :
ArgumentException; L
(L M
$strM d
)d e
;e f
if   
(   
string   
.   
IsNullOrWhiteSpace   )
(  ) *
species  * 1
)  1 2
)  2 3
throw  4 9
new  : =
ArgumentException  > O
(  O P
$str  P j
)  j k
;  k l
if!! 
(!! 
age!! 
<=!! 
$num!! 
)!! 
throw!! 
new!!  #
ArgumentException!!$ 5
(!!5 6
$str!!6 V
)!!V W
;!!W X
}"" 	
}## 
}$$ 