í
D:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Application\Validators\AnimalDtoValidator.cs
	namespace 	
AnimalManager
 
. 
Application #
.# $

Validators$ .
{ 
public 

class 
AnimalDtoValidator #
:$ %
AbstractValidator& 7
<7 8
	AnimalDto8 A
>A B
{ 
public 
AnimalDtoValidator !
(! "
)" #
{		 	
RuleFor

 
(

 
a

 
=>

 
a

 
.

 
Name

 
)

  
.

  !
NotEmpty

! )
(

) *
)

* +
.

+ ,
WithMessage

, 7
(

7 8
$str

8 O
)

O P
;

P Q
RuleFor 
( 
a 
=> 
a 
. 
Species "
)" #
.# $
NotEmpty$ ,
(, -
)- .
.. /
WithMessage/ :
(: ;
$str; U
)U V
;V W
RuleFor 
( 
a 
=> 
a 
. 
Age 
) 
.  
GreaterThan  +
(+ ,
$num, -
)- .
.. /
WithMessage/ :
(: ;
$str; _
)_ `
;` a
} 	
} 
} «9
xD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Application\Services\AnimalService.cs
	namespace

 	
AnimalManager


 
.

 
Application

 #
.

# $
Services

$ ,
{ 
public 

class 
AnimalService 
:  
IAnimalService! /
{ 
private 
readonly 
IRepository $
<$ %
Animal% +
>+ ,
_repository- 8
;8 9
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 

IValidator #
<# $
	AnimalDto$ -
>- .
_animalValidator/ ?
;? @
public 
AnimalService 
( 
IRepository (
<( )
Animal) /
>/ 0

repository1 ;
,; <
IMapper= D
mapperE K
,K L

IValidatorM W
<W X
	AnimalDtoX a
>a b
animalValidatorc r
)r s
{ 	
_repository 
= 

repository $
;$ %
_mapper 
= 
mapper 
; 
_animalValidator 
= 
animalValidator .
;. /
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
	AnimalDto& /
>/ 0
>0 1
GetAllAsync2 =
(= >
)> ?
{ 	
var 
animals 
= 
await 
_repository  +
.+ ,
GetAllAsync, 7
(7 8
)8 9
;9 :
return 
_mapper 
. 
Map 
< 
IEnumerable *
<* +
	AnimalDto+ 4
>4 5
>5 6
(6 7
animals7 >
)> ?
;? @
} 	
public 
async 
Task 
< 
	AnimalDto #
># $
GetByIdAsync% 1
(1 2
Guid2 6
id7 9
)9 :
{ 	
var   
animal   
=   
await   
_repository   *
.  * +
GetByIdAsync  + 7
(  7 8
id  8 :
)  : ;
;  ; <
return!! 
_mapper!! 
.!! 
Map!! 
<!! 
	AnimalDto!! (
>!!( )
(!!) *
animal!!* 0
)!!0 1
;!!1 2
}"" 	
public%% 
async%% 
Task%% 
<%% 
Result%%  
<%%  !
	AnimalDto%%! *
>%%* +
>%%+ ,
AddAsync%%- 5
(%%5 6
	AnimalDto%%6 ?
	animalDto%%@ I
)%%I J
{&& 	
ValidationResult'' 
validationResult'' -
=''. /
_animalValidator''0 @
.''@ A
Validate''A I
(''I J
	animalDto''J S
)''S T
;''T U
if)) 
()) 
!)) 
validationResult)) !
.))! "
IsValid))" )
)))) *
{** 
return++ 
Result++ 
<++ 
	AnimalDto++ '
>++' (
.++( )
Fail++) -
(++- .
validationResult++. >
.++> ?
Errors++? E
.++E F
Select++F L
(++L M
e++M N
=>++O Q
e++R S
.++S T
ErrorMessage++T `
)++` a
.++a b
ToList++b h
(++h i
)++i j
)++j k
;++k l
},, 
var.. 
animal.. 
=.. 
_mapper..  
...  !
Map..! $
<..$ %
Animal..% +
>..+ ,
(.., -
	animalDto..- 6
)..6 7
;..7 8
await00 
_repository00 
.00 
AddAsync00 &
(00& '
animal00' -
)00- .
;00. /
return22 
Result22 
<22 
	AnimalDto22 #
>22# $
.22$ %
Success22% ,
(22, -
_mapper22- 4
.224 5
Map225 8
<228 9
	AnimalDto229 B
>22B C
(22C D
animal22D J
)22J K
)22K L
;22L M
}33 	
public55 
async55 
Task55 
<55 
Result55  
<55  !
	AnimalDto55! *
>55* +
>55+ ,
UpdateAsync55- 8
(558 9
Guid559 =
id55> @
,55@ A
	AnimalDto55B K
	animalDto55L U
)55U V
{66 	
var77 
animal77 
=77 
await77 
_repository77 *
.77* +
GetByIdAsync77+ 7
(777 8
id778 :
)77: ;
;77; <
if88 
(88 
animal88 
==88 
null88 
)88 
{99 
return:: 
Result:: 
<:: 
	AnimalDto:: '
>::' (
.::( )
Fail::) -
(::- .
$str::. @
)::@ A
;::A B
};; 
ValidationResult== 
validationResult== -
===. /
_animalValidator==0 @
.==@ A
Validate==A I
(==I J
	animalDto==J S
)==S T
;==T U
if?? 
(?? 
!?? 
validationResult?? !
.??! "
IsValid??" )
)??) *
{@@ 
returnAA 
ResultAA 
<AA 
	AnimalDtoAA '
>AA' (
.AA( )
FailAA) -
(AA- .
validationResultAA. >
.AA> ?
ErrorsAA? E
.AAE F
SelectAAF L
(AAL M
eAAM N
=>AAO Q
eAAR S
.AAS T
ErrorMessageAAT `
)AA` a
.AAa b
ToListAAb h
(AAh i
)AAi j
)AAj k
;AAk l
}BB 
animalDD 
.DD 
UpdateDD 
(DD 
	animalDtoDD #
.DD# $
NameDD$ (
,DD( )
	animalDtoDD* 3
.DD3 4
SpeciesDD4 ;
,DD; <
	animalDtoDD= F
.DDF G
AgeDDG J
)DDJ K
;DDK L
awaitEE 
_repositoryEE 
.EE 
UpdateAsyncEE )
(EE) *
animalEE* 0
)EE0 1
;EE1 2
returnGG 
ResultGG 
<GG 
	AnimalDtoGG #
>GG# $
.GG$ %
SuccessGG% ,
(GG, -
_mapperGG- 4
.GG4 5
MapGG5 8
<GG8 9
	AnimalDtoGG9 B
>GGB C
(GGC D
animalGGD J
)GGJ K
)GGK L
;GGL M
}HH 	
publicJJ 
asyncJJ 
TaskJJ 
DeleteAsyncJJ %
(JJ% &
GuidJJ& *
idJJ+ -
)JJ- .
{KK 	
awaitLL 
_repositoryLL 
.LL 
DeleteAsyncLL )
(LL) *
idLL* ,
)LL, -
;LL- .
}NN 	
}OO 
}PP ö
D:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Application\Mappings\AnimalMappingProfile.cs
	namespace 	
AnimalManager
 
. 
Application #
.# $
Mappings$ ,
{ 
public 

class  
AnimalMappingProfile %
:& '
Profile( /
{ 
public		  
AnimalMappingProfile		 #
(		# $
)		$ %
{

 	
	CreateMap 
< 
Animal 
, 
	AnimalDto '
>' (
(( )
)) *
.* +

ReverseMap+ 5
(5 6
)6 7
;7 8
} 	
} 
} ñ

{D:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Application\Interfaces\IAnimalService.cs
	namespace 	
AnimalManager
 
. 
Application #
.# $

Interfaces$ .
{ 
public 

	interface 
IAnimalService #
{ 
Task 
< 
IEnumerable 
< 
	AnimalDto "
>" #
># $
GetAllAsync% 0
(0 1
)1 2
;2 3
Task		 
<		 
	AnimalDto		 
>		 
GetByIdAsync		 $
(		$ %
Guid		% )
id		* ,
)		, -
;		- .
Task 
< 
Result 
< 
	AnimalDto 
> 
> 
AddAsync  (
(( )
	AnimalDto) 2
	animalDto3 <
)< =
;= >
Task 
< 
Result 
< 
	AnimalDto 
> 
> 
UpdateAsync  +
(+ ,
Guid, 0
id1 3
,3 4
	AnimalDto5 >
	animalDto? H
)H I
;I J
Task 
DeleteAsync 
( 
Guid 
id  
)  !
;! "
} 
} ¼
pD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Application\DTOs\AnimalDto.cs
	namespace 	
AnimalManager
 
. 
Application #
.# $
DTOs$ (
{ 
public 

class 
	AnimalDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Species 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
}		 
}

 ÷
oD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Application\Common\Result.cs
	namespace 	
AnimalManager
 
. 
Application #
.# $
Common$ *
{ 
public 

class 
Result 
< 
T 
> 
{ 
public 
bool 
	IsSuccess 
{ 
get  #
;# $
set% (
;( )
}* +
public 
T 
Data 
{ 
get 
; 
set  
;  !
}" #
public 
List 
< 
string 
> 
Errors "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
Result		 
(		 
bool		 
	isSuccess		 $
,		$ %
T		& '
data		( ,
,		, -
List		. 2
<		2 3
string		3 9
>		9 :
errors		; A
)		A B
{

 	
	IsSuccess 
= 
	isSuccess !
;! "
Data 
= 
data 
; 
Errors 
= 
errors 
; 
} 	
public 
static 
Result 
< 
T 
> 
Success  '
(' (
T( )
data* .
). /
{ 	
return 
new 
Result 
< 
T 
>  
(  !
true! %
,% &
data' +
,+ ,
null- 1
)1 2
;2 3
} 	
public 
static 
Result 
< 
T 
> 
Fail  $
($ %
List% )
<) *
string* 0
>0 1
errors2 8
)8 9
{ 	
return 
new 
Result 
< 
T 
>  
(  !
false! &
,& '
default( /
,/ 0
errors1 7
)7 8
;8 9
} 	
public 
static 
Result 
< 
T 
> 
Fail  $
($ %
string% +
error, 1
)1 2
{ 	
return 
new 
Result 
< 
T 
>  
(  !
false! &
,& '
default( /
,/ 0
new1 4
List5 9
<9 :
string: @
>@ A
{B C
errorD I
}J K
)K L
;L M
} 	
} 
}   