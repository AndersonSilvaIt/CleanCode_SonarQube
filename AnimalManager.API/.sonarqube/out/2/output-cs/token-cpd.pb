‘
|D:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Infrastructure\Repositories\Repository.cs
	namespace 	
AnimalManager
 
. 
Infrastructure &
.& '
Repositories' 3
{ 
public 

class 

Repository 
< 
T 
> 
:  
IRepository! ,
<, -
T- .
>. /
where0 5
T6 7
:8 9

BaseEntity: D
{		 
private

 
readonly

 
AppDbContext

 %
_context

& .
;

. /
private 
readonly 
DbSet 
< 
T  
>  !
_dbSet" (
;( )
public 

Repository 
( 
AppDbContext &
context' .
). /
{ 	
_context 
= 
context 
; 
_dbSet 
= 
_context 
. 
Set !
<! "
T" #
># $
($ %
)% &
;& '
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
T& '
>' (
>( )
GetAllAsync* 5
(5 6
)6 7
{ 	
return 
await 
_dbSet 
.  
ToListAsync  +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
T 
? 
> 
GetByIdAsync *
(* +
Guid+ /
id0 2
)2 3
{ 	
return 
await 
_dbSet 
.  
	FindAsync  )
() *
id* ,
), -
;- .
} 	
public 
async 
Task 
AddAsync "
(" #
T# $
entity% +
)+ ,
{ 	
await   
_dbSet   
.   
AddAsync   !
(  ! "
entity  " (
)  ( )
;  ) *
await!! 
_context!! 
.!! 
SaveChangesAsync!! +
(!!+ ,
)!!, -
;!!- .
}"" 	
public$$ 
async$$ 
Task$$ 
UpdateAsync$$ %
($$% &
T$$& '
entity$$( .
)$$. /
{%% 	
_dbSet&& 
.&& 
Update&& 
(&& 
entity&&  
)&&  !
;&&! "
await'' 
_context'' 
.'' 
SaveChangesAsync'' +
(''+ ,
)'', -
;''- .
}(( 	
public** 
async** 
Task** 
DeleteAsync** %
(**% &
Guid**& *
id**+ -
)**- .
{++ 	
var,, 
entity,, 
=,, 
await,, 
GetByIdAsync,, +
(,,+ ,
id,,, .
),,. /
;,,/ 0
if.. 
(.. 
entity.. 
!=.. 
null.. 
).. 
{// 
_dbSet00 
.00 
Remove00 
(00 
entity00 $
)00$ %
;00% &
await11 
_context11 
.11 
SaveChangesAsync11 /
(11/ 0
)110 1
;111 2
}22 
}33 	
}44 
}55 ‘
ˆD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Infrastructure\Migrations\20241218185927_InitialDB.cs
	namespace 	
AnimalManager
 
. 
Infrastructure &
.& '

Migrations' 1
{ 
public 

partial 
class 
	InitialDB "
:# $
	Migration% .
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
	maxLength> G
:G H
$numI L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
Species 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 ?
,? @
	maxLengthA J
:J K
$numL O
,O P
nullableQ Y
:Y Z
false[ `
)` a
,a b
Age 
= 
table 
.  
Column  &
<& '
int' *
>* +
(+ ,
type, 0
:0 1
$str2 ;
,; <
nullable= E
:E F
falseG L
)L M
,M N
CratedAt 
= 
table $
.$ %
Column% +
<+ ,
DateTime, 4
>4 5
(5 6
type6 :
:: ;
$str< B
,B C
nullableD L
:L M
falseN S
)S T
,T U
	UpdatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= C
,C D
nullableE M
:M N
falseO T
)T U
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 0
,0 1
x2 3
=>4 6
x7 8
.8 9
Id9 ;
); <
;< =
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name   
:   
$str   
)   
;    
}!! 	
}"" 
}## ô
yD:\Anderson\Estudos\Estudos_C#\CleanCode_SonarQube\AnimalManager.API\AnimalManager.Infrastructure\Context\AppDbContext.cs
	namespace 	
AnimalManager
 
. 
Infrastructure &
.& '
Context' .
{ 
public 

class 
AppDbContext 
: 
	DbContext  )
{ 
public 
AppDbContext 
( 
DbContextOptions ,
<, -
AppDbContext- 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{T U
}V W
public

 
DbSet

 
<

 
Animal

 
>

 
Animal

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
Animal  &
>& '
(' (
)( )
.) *
Property* 2
(2 3
a3 4
=>5 7
a8 9
.9 :
Name: >
)> ?
.? @

IsRequired@ J
(J K
)K L
.L M
HasMaxLengthM Y
(Y Z
$numZ ]
)] ^
;^ _
modelBuilder 
. 
Entity 
<  
Animal  &
>& '
(' (
)( )
.) *
Property* 2
(2 3
a3 4
=>5 7
a8 9
.9 :
Species: A
)A B
.B C

IsRequiredC M
(M N
)N O
.O P
HasMaxLengthP \
(\ ]
$num] `
)` a
;a b
} 	
} 
} 